2018-01-12 11:05:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:05:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:05:17 - info: Connection has been established successfully.
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:05:17 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:05:17 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:05:17 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:05:17 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:05:17 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:05:17 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:05:17 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:05:17 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:05:17 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:05:17 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:05:17 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:05:17 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:05:17 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:05:17 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:05:17 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:05:17 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:05:17 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:05:17 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:05:17 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:05:17 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:05:17 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:05:17 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:05:17 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:05:17 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-12 11:06:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:06:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:06:39 - info: Connection has been established successfully.
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:06:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:06:39 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:06:39 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:06:39 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:06:39 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:06:39 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:06:39 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:06:39 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:06:39 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:06:39 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:06:39 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:06:39 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:06:39 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:06:39 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:06:39 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:06:39 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:06:39 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:06:39 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:06:39 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:06:39 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:06:39 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:06:39 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:06:39 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:06:39 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:06:39 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-12 11:08:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:08:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:08:21 - info: Connection has been established successfully.
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:08:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:08:21 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:08:21 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:08:21 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:08:21 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:08:21 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:08:21 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:08:21 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:08:21 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:08:21 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:08:21 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:08:21 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:08:21 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:08:21 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:08:21 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:08:21 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:08:21 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:08:21 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:08:21 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:08:21 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:08:21 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:08:21 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:08:21 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:08:21 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:08:21 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-12 11:09:11 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:09:11 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:09:11 - info: Connection has been established successfully.
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:09:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:09:11 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:09:11 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:09:11 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:09:11 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:09:11 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:09:11 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:09:11 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:09:11 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:09:11 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:09:11 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:09:11 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:09:11 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:09:11 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:09:11 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:09:11 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:09:11 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:09:11 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:09:11 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:09:11 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:09:11 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:09:11 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:09:11 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:09:11 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:09:11 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-12 11:12:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:12:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:12:55 - info: Connection has been established successfully.
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:12:55 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:12:55 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:12:55 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:12:55 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:12:55 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:12:55 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:12:55 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:12:55 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:12:55 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:12:55 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:12:55 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:12:55 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:12:55 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:12:55 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:12:55 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:12:55 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:12:55 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:12:55 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:12:55 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:12:55 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:12:55 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:12:55 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:12:55 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:12:55 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-12 11:13:03 - info: Executing (default): SELECT 1+1 AS result
2018-01-12 11:13:03 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-12 11:13:03 - info: Connection has been established successfully.
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-12 11:13:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-12 11:13:03 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username";
2018-01-12 11:13:03 - info: Executing (default): SELECT "itemclass"."classid", "itemclass"."classname", "itemclass"."imagepath", "itemclass"."description", "itemclass"."mealtype", "item"."itemid" AS "item.itemid", "item"."name" AS "item.name", "item"."imagepath" AS "item.imagepath", "item"."price" AS "item.price", "item"."description" AS "item.description", "item"."isdisplay" AS "item.isdisplay", "item"."classid" AS "item.classid" FROM "itemclass" AS "itemclass" LEFT OUTER JOIN "item" AS "item" ON "itemclass"."classid" = "item"."classid";
2018-01-12 11:13:03 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-12 11:13:03 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid";
2018-01-12 11:13:03 - info: Load menu itemClass: 9ed2071e-93b1-42bb-8687-3ccdc87decb8
2018-01-12 11:13:03 - info: Load menu item: d4512dba-4582-4ec2-b4ac-581e3ac1e0a8
2018-01-12 11:13:03 - info: Load menu item: 49d643bb-c7d6-4f00-b49f-ceae68971e40
2018-01-12 11:13:03 - info: Load menu itemClass: 2e3bcd58-8800-4c63-b1d1-b3e7649c19cb
2018-01-12 11:13:03 - info: Load menu item: 5d551385-944c-4905-8e20-0fc83e24b32e
2018-01-12 11:13:03 - info: Load menu item: 00d8d906-6e15-49b6-971a-ee1d24a1b679
2018-01-12 11:13:03 - info: Load menu itemClass: 01965936-0347-44a8-bf74-5e62b4fb9b3e
2018-01-12 11:13:03 - info: Load menu item: 2b2a29dd-c2c9-4299-ba8a-c758d286e74b
2018-01-12 11:13:03 - info: Load menu item: 2654c0ba-c420-4ae4-8cc6-0fce7312312e
2018-01-12 11:13:03 - info: Load menu itemClass: de171fc3-b5cb-498e-b36c-2f20d1ab8368
2018-01-12 11:13:03 - info: Load menu item: 1fb05487-065f-4003-a4c9-60aee370c11c
2018-01-12 11:13:03 - info: Load menu item: 868380df-c115-4482-8c27-09502007cd3c
2018-01-12 11:13:03 - info: Load menu itemClass: aca7d5e4-52f9-421f-9b15-0f4aa12422d6
2018-01-12 11:13:03 - info: Load menu item: c2168b2b-09fe-4576-bee2-73437b4e9b70
2018-01-12 11:13:03 - info: Load menu item: 4570a5a6-595e-459e-930e-cf30275208eb
2018-01-12 11:13:03 - info: Load menu item: c0752fee-067f-44ee-a885-098011d4e433
2018-01-12 11:13:03 - info: Load Customer ID: 69e30389-2cfc-410d-a516-4dba6b840f99
2018-01-12 11:13:03 - info: Load Customer ID: fa64f616-4a09-4eb7-b976-43856dd1d462
2018-01-12 11:13:03 - info: Load Customer ID: be88b22b-7ae7-410a-87b1-e2ad76e27793
2018-01-12 11:13:03 - info: Load Map ID: 4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3
2018-01-23 17:37:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:37:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:37:49 - info: Connection has been established successfully.
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:37:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:37:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:40:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:40:28 - info: Connection has been established successfully.
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:40:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:40:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:44:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:44:26 - info: Connection has been established successfully.
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:44:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:44:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:48:25 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:48:25 - info: Connection has been established successfully.
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:48:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:48:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:48:48 - info: Connection has been established successfully.
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:48:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:48:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:49:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:49:01 - info: Connection has been established successfully.
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:49:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:49:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:52:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:52:44 - info: Connection has been established successfully.
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:52:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:52:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): SELECT 1+1 AS result
2018-01-23 17:53:24 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-23 17:53:24 - info: Connection has been established successfully.
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-23 17:53:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-23 17:53:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 10:03:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 10:03:55 - info: Connection has been established successfully.
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:03:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 10:03:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 10:04:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 10:04:16 - info: Connection has been established successfully.
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 10:04:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 10:04:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 10:04:21 - info: Connection has been established successfully.
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 10:04:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 10:04:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:47:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:47:36 - info: Connection has been established successfully.
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:47:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:47:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:48:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:48:12 - info: Connection has been established successfully.
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:48:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:48:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:48:16 - info: Connection has been established successfully.
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:48:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:48:20 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:48:20 - info: Connection has been established successfully.
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:48:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:48:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:48:28 - info: Connection has been established successfully.
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:48:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 14:48:32 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 14:48:32 - info: Connection has been established successfully.
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 14:48:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 14:48:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:18:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:18:58 - info: Connection has been established successfully.
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:18:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:18:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:13 - info: Connection has been established successfully.
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:21 - info: Connection has been established successfully.
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:42 - info: Connection has been established successfully.
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:46 - info: Connection has been established successfully.
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:52 - info: Connection has been established successfully.
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:19:57 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:19:57 - info: Connection has been established successfully.
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:19:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:19:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:20:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:20:16 - info: Connection has been established successfully.
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:20:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:20:32 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:20:32 - info: Connection has been established successfully.
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:20:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:20:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:20:35 - info: Connection has been established successfully.
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:20:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:20:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:20:39 - info: Connection has been established successfully.
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:20:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:20:47 - info: Connection has been established successfully.
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:22:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:22:05 - info: Connection has been established successfully.
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:22:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:22:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:23:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:23:49 - info: Connection has been established successfully.
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:23:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:23:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:23:50 - info: Connection has been established successfully.
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:23:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:23:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:24:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:24:10 - info: Connection has been established successfully.
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:24:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:24:24 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:24:24 - info: Connection has been established successfully.
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:24:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:24:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:24:29 - info: Connection has been established successfully.
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:24:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:24:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:25:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:25:21 - info: Connection has been established successfully.
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:25:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:25:29 - info: Connection has been established successfully.
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:25:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 15:25:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 15:25:36 - info: Connection has been established successfully.
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 15:25:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 15:25:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:29:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:29:42 - info: Connection has been established successfully.
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:29:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:29:52 - info: Connection has been established successfully.
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:29:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:29:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:31:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:31:05 - info: Connection has been established successfully.
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:31:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:31:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:31:28 - info: Connection has been established successfully.
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:31:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:31:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:34:20 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:34:20 - info: Connection has been established successfully.
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:34:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:34:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:34:22 - info: Connection has been established successfully.
2018-01-24 17:34:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:34:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:34:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:34:23 - info: Connection has been established successfully.
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:34:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:34:32 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:34:32 - info: Connection has been established successfully.
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:34:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:34:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:34:43 - info: Connection has been established successfully.
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:34:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:34:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:36:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:36:44 - info: Connection has been established successfully.
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:36:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:36:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:36:52 - info: Connection has been established successfully.
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:36:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:36:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:37:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:37:05 - info: Connection has been established successfully.
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:37:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:37:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:37:12 - info: Connection has been established successfully.
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:37:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:37:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:37:29 - info: Connection has been established successfully.
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:37:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:37:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:37:50 - info: Connection has been established successfully.
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:37:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:37:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:38:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:38:22 - info: Connection has been established successfully.
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:38:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:38:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:38:44 - info: Connection has been established successfully.
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:38:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:38:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:39:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:39:47 - info: Connection has been established successfully.
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:39:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:39:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:40:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:40:12 - info: Connection has been established successfully.
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:40:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:40:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:40:26 - info: Connection has been established successfully.
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:40:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:40:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:40:36 - info: Connection has been established successfully.
2018-01-24 17:40:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:40:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:40:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:40:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:40:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:40:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:41:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:41:58 - info: Connection has been established successfully.
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:41:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:41:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:42:03 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:42:03 - info: Connection has been established successfully.
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:42:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:42:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:42:16 - info: Connection has been established successfully.
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:42:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:42:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:42:26 - info: Connection has been established successfully.
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:43:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:43:28 - info: Connection has been established successfully.
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:43:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:43:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:43:54 - info: Connection has been established successfully.
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:43:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:43:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:44:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:44:06 - info: Connection has been established successfully.
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:44:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:44:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:44:17 - info: Connection has been established successfully.
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:44:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:44:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:44:59 - info: Connection has been established successfully.
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:44:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:44:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:45:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:45:06 - info: Connection has been established successfully.
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:45:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:45:30 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:45:30 - info: Connection has been established successfully.
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:45:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:45:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:45:36 - info: Connection has been established successfully.
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:46:00 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:46:00 - info: Connection has been established successfully.
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:46:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:46:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:46:12 - info: Connection has been established successfully.
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:46:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:46:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:46:28 - info: Connection has been established successfully.
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:46:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:46:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:46:36 - info: Connection has been established successfully.
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:46:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:46:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:07 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:07 - info: Connection has been established successfully.
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:13 - info: Connection has been established successfully.
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:22 - info: Connection has been established successfully.
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:35 - info: Connection has been established successfully.
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:42 - info: Connection has been established successfully.
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:44 - info: Connection has been established successfully.
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-24 17:50:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-24 17:50:47 - info: Connection has been established successfully.
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-24 17:50:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-24 17:50:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:42:14 - error: Unable to connect to the database:SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:5432
2018-01-25 14:42:23 - error: Unable to connect to the database:SequelizeConnectionRefusedError: connect ECONNREFUSED 127.0.0.1:5432
2018-01-25 14:47:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 14:47:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 14:47:05 - info: Connection has been established successfully.
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:47:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 14:47:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 14:49:25 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 14:49:25 - info: Connection has been established successfully.
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:49:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 14:49:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 14:50:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 14:50:43 - info: Connection has been established successfully.
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 14:50:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 14:50:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 14:50:55 - info: Connection has been established successfully.
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 14:50:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 14:50:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:00:04 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:00:04 - info: Connection has been established successfully.
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:00:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:00:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:00:29 - info: Connection has been established successfully.
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:00:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:00:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:00:35 - info: Connection has been established successfully.
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:00:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:00:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:00:36 - info: Connection has been established successfully.
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:00:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:00:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:03:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:03:52 - info: Connection has been established successfully.
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:19 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:06:19 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:06:19 - info: Connection has been established successfully.
2018-01-25 15:06:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:06:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:06:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:06:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:06:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:06:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:06:36 - info: Connection has been established successfully.
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:06:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:06:37 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:06:37 - info: Connection has been established successfully.
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:06:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:06:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:07:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:07:01 - info: Connection has been established successfully.
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:07:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:07:09 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:07:09 - info: Connection has been established successfully.
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:07:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:07:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:07:16 - info: Connection has been established successfully.
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:27 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:09:56 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:09:56 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:09:56 - info: Connection has been established successfully.
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:09:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:09:58 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:10:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:10:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:10:06 - info: Connection has been established successfully.
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:10:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:10:09 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:10:09 - info: Connection has been established successfully.
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:10:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:10:12 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:11:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:11:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:11:23 - info: Connection has been established successfully.
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:11:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:11:29 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:13:13 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:13:26 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:13:40 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:14:01 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:14:25 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:14:25 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:14:25 - info: Connection has been established successfully.
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:14:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:27 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:14:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:14:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:14:49 - info: Connection has been established successfully.
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:14:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:14:51 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:16:09 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:16:51 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:17:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:17:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:17:01 - info: Connection has been established successfully.
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:17:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:17:03 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:17:03 - info: Connection has been established successfully.
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:17:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:17:08 - info: POST /api/auth/login From: ::1
params: undefined
2018-01-25 15:18:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:18:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:18:42 - info: Connection has been established successfully.
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:18:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:18:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:18:59 - info: Connection has been established successfully.
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:18:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:18:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:19:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:19:21 - info: Connection has been established successfully.
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:19:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:19:24 - info: POST /api/auth/login From: ::1
params: {}
2018-01-25 15:20:22 - info: POST /api/auth/login From: ::1
params: {}
2018-01-25 15:20:45 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:20:45 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:20:45 - info: Connection has been established successfully.
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:20:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:20:48 - info: POST /api/auth/login From: ::1
params: {}
2018-01-25 15:21:57 - info: POST /api/auth/login From: ::1
params: {}
2018-01-25 15:23:52 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:23:57 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$ec9c5a2c$1$3a5b5d8803def8d8141f2e4728fe56b34fb7a77e';
2018-01-25 15:26:44 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:26:44 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$fa606c36$1$0823ed94acfbcd355b8f26af9c429fb5da2e957d';
2018-01-25 15:27:20 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:27:21 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$2539befd$1$87176b805d826e1a06e4c840a8d31f0f3291e25b';
2018-01-25 15:27:30 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:27:35 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$9854a0ba$1$16b321d26d24ebeafddc1d71b4b132fa6970b5b1';
2018-01-25 15:27:43 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:27:49 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$7dfae374$1$c11c606345ecefc367a46ce60d35668a0f37f013';
2018-01-25 15:29:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:29:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:29:42 - info: Connection has been established successfully.
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:29:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:29:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:30:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:30:29 - info: Connection has been established successfully.
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:30:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:30:32 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:30:36 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$d4957cf7$1$737a8b3aecb28109e237e7fc05987a85a2265040';
2018-01-25 15:31:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:31:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:31:46 - info: Connection has been established successfully.
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:31:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:31:48 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:32:04 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$3d37d029$1$d05b0260c4d951951b4b295cc40ea17f45959810';
2018-01-25 15:33:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:33:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:33:05 - info: Connection has been established successfully.
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:33:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:06 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:33:06 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$9b8af4b0$1$6440005add037ea3f068d93173170d1382c57f33';
2018-01-25 15:33:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:33:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:33:27 - info: Connection has been established successfully.
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:33:45 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:33:48 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$308a25b4$1$4c95c43c7469a4b0acd0a1fb843cc222f49797a1';
2018-01-25 15:34:38 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:34:38 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:34:38 - info: Connection has been established successfully.
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:34:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:34:45 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:34:46 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$4c67adf7$1$e9e2beb3b4eb6a75252ef18b95e1c756943a3939';
2018-01-25 15:34:53 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:34:54 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$b50888d2$1$a34600fddb1f9370034c0b174094919dc3bdd273';
2018-01-25 15:35:29 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:35:32 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$3aa1e67e$1$4061847c88551182c7ef7be4d20c4bcacfd74cbe';
2018-01-25 15:35:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:35:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:35:52 - info: Connection has been established successfully.
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:35:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:35:56 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:35:57 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$1ff85af0$1$88a7a77ddd57605222e71c03fb545fb9c2b241b2';
2018-01-25 15:36:09 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"123456"}
2018-01-25 15:36:13 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$2976550c$1$91359c2f3174266110e24e3dd0c7e478681d6466';
2018-01-25 15:36:16 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"123456"}
2018-01-25 15:36:16 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$48b2c12d$1$8daee53cfe088a4b96ca8eab7a0651a95a508fd7';
2018-01-25 15:36:19 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"12345678"}
2018-01-25 15:36:19 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$f6889f8c$1$c1d43b17eee6e5e93a37b4b3eacbf40b71324751';
2018-01-25 15:37:06 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin01"}
2018-01-25 15:37:06 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$56489ade$1$69b8921c91bec5b8f82ea2f88effcc00a12d072e';
2018-01-25 15:37:17 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"11111111"}
2018-01-25 15:37:17 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$7a4ea530$1$f265772667e3d815f2c8feae404be8add6d7fefb';
2018-01-25 15:37:23 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"111111"}
2018-01-25 15:37:23 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$96e2ead2$1$0170fe2246050ccbb64c94e2c79c30677c40bf92';
2018-01-25 15:37:43 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:37:43 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$f999c9f4$1$d99dd52df8a5ecf1b20d2b82934c5d027f2527e9';
2018-01-25 15:41:25 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:41:25 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$a48c8150$1$64e282ac2d03619a6bbc4cf70f5120e15bfd712a';
2018-01-25 15:41:26 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:41:26 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$92764de9$1$613c4dd7544659a6f72173c4e3f578fe20be1d2d';
2018-01-25 15:41:27 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:41:27 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$e09d130f$1$d8c9e1943b2f6a3fd5c646a4db8e39b2b5a7968f';
2018-01-25 15:41:27 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:41:27 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$344fa666$1$27aed639428a06f3af4e26b43183ff1657a68c58';
2018-01-25 15:42:36 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:42:36 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$a7b2d20d$1$7f08d83f94fd40a889be4a0cdcb8d9524c5f4d51';
2018-01-25 15:42:47 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:42:47 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin' AND "userinfo"."password" = 'sha1$967234fd$1$d2ffadc5b8c5e9bd2d596bd6bb00c1b500d374ed';
2018-01-25 15:44:32 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:44:32 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:44:32 - info: Connection has been established successfully.
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:44:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:44:39 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:44:39 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:45:24 - info: POST /api/auth/login From: ::1
params: {"username":"admin1","password":"admin"}
2018-01-25 15:45:24 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin1';
2018-01-25 15:45:30 - info: POST /api/auth/login From: ::1
params: {"username":"admin1","password":"admin"}
2018-01-25 15:45:30 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin1';
2018-01-25 15:45:44 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:45:44 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:47:04 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:47:04 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:47:04 - info: Connection has been established successfully.
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:47:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:47:08 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:47:08 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:48:15 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:48:15 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:48:15 - info: Connection has been established successfully.
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:48:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:48:37 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:48:37 - info: Connection has been established successfully.
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:48:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:48:45 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:48:45 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:48:54 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:48:54 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:49:15 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:49:15 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:49:15 - info: Connection has been established successfully.
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:49:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:49:16 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:49:16 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:50:15 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:50:15 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:50:15 - info: Connection has been established successfully.
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:50:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:50:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:50:16 - info: Connection has been established successfully.
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:50:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:50:22 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:50:22 - info: Executing (default): SELECT "username", "password" FROM "userinfo" AS "userinfo" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:52:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:52:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:52:58 - info: Connection has been established successfully.
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:52:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:52:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:53:02 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:53:02 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:54:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:54:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:54:07 - info: Connection has been established successfully.
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:54:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:54:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:56:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:56:29 - info: Connection has been established successfully.
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:56:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:37 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:56:37 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:56:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:56:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:56:59 - info: Connection has been established successfully.
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:56:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:56:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:00 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:57:00 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:57:02 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 15:57:02 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 15:57:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 15:57:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 15:57:53 - info: Connection has been established successfully.
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 15:57:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 15:57:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:04:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:04:27 - info: Connection has been established successfully.
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:04:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:04:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:06:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:06:47 - info: Connection has been established successfully.
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:06:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:06:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:07:14 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:07:14 - info: Connection has been established successfully.
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:07:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:07:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:08:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:08:47 - info: Connection has been established successfully.
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:08:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:08:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:09:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:09:27 - info: Connection has been established successfully.
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:09:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:41 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:09:41 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:09:41 - info: Connection has been established successfully.
2018-01-25 16:09:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:09:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:09:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:09:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:09:48 - info: Connection has been established successfully.
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:09:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:09:53 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 16:09:53 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 16:10:00 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 16:10:00 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 16:10:46 - info: GET /api/auth/logout From: ::1
params: {}
2018-01-25 16:10:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:10:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:10:52 - info: Connection has been established successfully.
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:10:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:10:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:11:04 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:11:04 - info: Connection has been established successfully.
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:06 - info: GET /api/auth/logout From: ::1
params: {}
2018-01-25 16:11:34 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:11:34 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:11:34 - info: Connection has been established successfully.
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:11:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:11:44 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 16:11:44 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 16:12:03 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:12:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:12:13 - info: Connection has been established successfully.
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:12:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:15 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:12:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:12:27 - info: Connection has been established successfully.
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:12:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:28 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:29 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:30 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:32 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 16:12:32 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 16:12:34 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:37 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:39 - info: GET /api/auth/logout From: ::1
params: {}
2018-01-25 16:12:41 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:12:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:12:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:12:46 - info: Connection has been established successfully.
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:12:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:12:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:12:47 - info: Connection has been established successfully.
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:12:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:12:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:15:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:15:13 - info: Connection has been established successfully.
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:15:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:15:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:16:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:16:58 - info: Connection has been established successfully.
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:16:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:16:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:20:15 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:20:15 - info: Connection has been established successfully.
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:20:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:20:24 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:20:24 - info: Connection has been established successfully.
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:20:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:20:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:20:47 - info: Connection has been established successfully.
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:20:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:20:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:20:54 - info: Connection has been established successfully.
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:20:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:20:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:21:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:21:51 - info: Connection has been established successfully.
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:21:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:21:59 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:23:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:23:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:23:22 - info: Connection has been established successfully.
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:23:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:23:26 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:23:28 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:24:00 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:24:00 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:24:00 - info: Connection has been established successfully.
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:24:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:24:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:25:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:25:43 - info: Connection has been established successfully.
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:25:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:25:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:25:55 - info: Connection has been established successfully.
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:25:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:25:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:30:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:30:43 - info: Connection has been established successfully.
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:30:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:30:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:30:50 - info: Connection has been established successfully.
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:30:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:30:56 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:31:41 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:31:41 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:31:41 - info: Connection has been established successfully.
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:31:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:31:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:31:59 - info: Connection has been established successfully.
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:31:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:31:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:01 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:32:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:32:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:32:23 - info: Connection has been established successfully.
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:32:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:32:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:32:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:32:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:32:25 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:08 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:33:08 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:33:08 - info: Connection has been established successfully.
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:33:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:09 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:12 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:15 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-25 16:33:15 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-25 16:33:17 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:25 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:26 - info: GET /api/auth/logout From: ::1
params: {}
2018-01-25 16:33:28 - info: GET /api/auth/test From: ::1
params: {}
2018-01-25 16:33:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-25 16:33:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-25 16:33:35 - info: Connection has been established successfully.
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-25 16:33:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-25 16:33:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:37:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:37:52 - info: Connection has been established successfully.
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:37:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:37:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:38:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:38:28 - info: Connection has been established successfully.
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:38:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:38:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:39:19 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:39:19 - info: Connection has been established successfully.
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:39:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:39:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:40:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:40:10 - info: Connection has been established successfully.
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:40:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:40:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:40:23 - info: Connection has been established successfully.
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:40:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:40:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:40:47 - info: Connection has been established successfully.
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:40:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:40:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:41:00 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:41:00 - info: Connection has been established successfully.
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:41:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:41:14 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:41:14 - info: Connection has been established successfully.
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:42:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:42:58 - info: Connection has been established successfully.
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:42:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:42:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:44:03 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:44:03 - info: Connection has been established successfully.
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:03 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:44:03 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:44:25 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:44:25 - info: Connection has been established successfully.
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:44:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:44:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:45:31 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:45:31 - info: Connection has been established successfully.
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:45:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:45:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:45:53 - info: Connection has been established successfully.
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:45:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:45:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:46:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:46:40 - info: Connection has been established successfully.
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:46:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:46:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:46:52 - info: Connection has been established successfully.
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:46:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:46:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:17 - info: Connection has been established successfully.
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:19 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:19 - info: Connection has been established successfully.
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:34 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:34 - info: Connection has been established successfully.
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:44 - info: Connection has been established successfully.
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:48 - info: Connection has been established successfully.
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:47:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:47:54 - info: Connection has been established successfully.
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:47:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:47:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:48:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:48:06 - info: Connection has been established successfully.
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:48:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:48:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:48:21 - info: Connection has been established successfully.
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:48:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:48:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:48:29 - info: Connection has been established successfully.
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:48:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:48:33 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:48:33 - info: Connection has been established successfully.
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:48:33 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:48:33 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:52:00 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:52:00 - info: Connection has been established successfully.
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:52:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:52:57 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:52:57 - info: Connection has been established successfully.
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:52:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:52:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:53:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:53:16 - info: Connection has been established successfully.
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:53:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:53:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 10:54:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 10:54:36 - info: Connection has been established successfully.
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 10:54:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 10:54:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:00:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:00:51 - info: Connection has been established successfully.
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:00:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:00:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:01:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:01:50 - info: Connection has been established successfully.
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:01:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:01:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:02:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:02:10 - info: Connection has been established successfully.
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:02:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:02:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:02:54 - info: Connection has been established successfully.
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:02:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:02:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:03:12 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:03:14 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:03:22 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:03:40 - info: POST /api/auth/login From: ::1
params: {"username":"admin","password":"admin"}
2018-01-26 11:03:40 - info: Executing (default): SELECT "userinfo"."username", "userinfo"."password", "userrole"."username" AS "userrole.username", "userrole"."role" AS "userrole.role" FROM "userinfo" AS "userinfo" LEFT OUTER JOIN "userrole" AS "userrole" ON "userinfo"."username" = "userrole"."username" WHERE "userinfo"."username" = 'admin';
2018-01-26 11:03:41 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:03:41 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:03:45 - info: GET /api/auth/logout From: ::1
params: {}
2018-01-26 11:03:46 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:04:29 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:04:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:04:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:04:54 - info: Connection has been established successfully.
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:04:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:04:56 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:05:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:05:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:05:12 - info: Connection has been established successfully.
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:05:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:14 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:05:15 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:05:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:05:56 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:05:56 - info: Connection has been established successfully.
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:05:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:05:59 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:06:05 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:06:09 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:06:13 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:06:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:06:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:06:27 - info: Connection has been established successfully.
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:06:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:06:33 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:06:33 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:07:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:07:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:07:06 - info: Connection has been established successfully.
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:07:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:07:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:07:12 - info: Connection has been established successfully.
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:07:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:12 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:07:12 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:07:13 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:07:13 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:07:14 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:07:14 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:07:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:07:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:07:21 - info: Connection has been established successfully.
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:07:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:07:23 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:07:23 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:07:24 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 11:07:24 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 11:10:34 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:10:34 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:10:34 - info: Connection has been established successfully.
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:10:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:10:37 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:10:37 - info: Connection has been established successfully.
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:10:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:10:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:15:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:15:40 - info: Connection has been established successfully.
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:15:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:15:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:15:58 - info: Connection has been established successfully.
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:15:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:15:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:19:04 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:19:04 - info: Connection has been established successfully.
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:19:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:19:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:22:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:22:39 - info: Connection has been established successfully.
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:22:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:22:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:22:58 - info: Connection has been established successfully.
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:22:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:22:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:23:31 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:23:31 - info: Connection has been established successfully.
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:23:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:23:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:23:53 - info: Connection has been established successfully.
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:23:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:23:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 11:55:45 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 11:55:45 - info: Connection has been established successfully.
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 11:55:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 11:55:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:02:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:02:39 - info: Connection has been established successfully.
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:02:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:02:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:02:52 - info: Connection has been established successfully.
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:02:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:02:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:04:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:04:28 - info: Connection has been established successfully.
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:04:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:04:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:04:48 - info: Connection has been established successfully.
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:04:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:04:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:05:11 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:05:11 - info: Connection has been established successfully.
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:05:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:05:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:05:17 - info: Connection has been established successfully.
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:05:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:05:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:05:40 - info: Connection has been established successfully.
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:05:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:05:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:05:53 - info: Connection has been established successfully.
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:05:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:05:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:05:58 - info: Connection has been established successfully.
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:05:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:05:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:07:42 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 12:08:05 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:08:05 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:08:05 - info: Connection has been established successfully.
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:05 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:08:05 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:08 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 12:08:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:08:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:08:22 - info: Connection has been established successfully.
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:08:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:08:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:08:36 - info: Connection has been established successfully.
2018-01-26 12:08:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:08:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:08:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:08:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:08:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:08:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:09:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:09:01 - info: Connection has been established successfully.
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:09:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:09:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:09:06 - info: Connection has been established successfully.
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:09:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:09:08 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 12:09:12 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 12:10:11 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:10:11 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:10:11 - info: Connection has been established successfully.
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:10:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:10:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:10:51 - info: Connection has been established successfully.
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:10:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:10:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 12:11:20 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 12:11:20 - info: Connection has been established successfully.
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 12:11:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 12:11:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:07:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:07:16 - info: Connection has been established successfully.
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:07:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:07:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:08:11 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:08:11 - info: Connection has been established successfully.
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:08:11 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:08:11 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:10:28 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:10:28 - info: Connection has been established successfully.
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:10:28 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:10:28 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:12:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:12:55 - info: Connection has been established successfully.
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:12:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:12:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:16:02 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 14:16:02 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:18:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:18:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:18:43 - info: Connection has been established successfully.
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:18:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:18:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:18:53 - info: Connection has been established successfully.
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:18:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:18:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:27 - info: Connection has been established successfully.
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:35 - info: Connection has been established successfully.
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:40 - info: Connection has been established successfully.
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:48 - info: Connection has been established successfully.
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:51 - info: Connection has been established successfully.
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:19:56 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:19:56 - info: Connection has been established successfully.
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:19:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:19:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:20:09 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:20:09 - info: Connection has been established successfully.
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:20:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:20:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:20:29 - info: Connection has been established successfully.
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:20:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:20:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:20:39 - info: Connection has been established successfully.
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:20:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:20:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:20:48 - info: Connection has been established successfully.
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:20:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:20:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:20:58 - info: Connection has been established successfully.
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:20:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:20:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:22:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:22:13 - info: Connection has been established successfully.
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:22:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:22:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:22:42 - info: Connection has been established successfully.
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:22:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:22:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:23:30 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:23:30 - info: Connection has been established successfully.
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:23:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:32 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 14:23:32 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:23:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:23:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:23:51 - info: Connection has been established successfully.
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:23:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:23:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:24:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:24:12 - info: Connection has been established successfully.
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:24:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:24:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:24:26 - info: Connection has been established successfully.
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:24:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:24:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:24:55 - info: Connection has been established successfully.
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:24:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:24:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:24:59 - info: Connection has been established successfully.
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:24:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:24:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:26:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:26:44 - info: Connection has been established successfully.
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:26:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:26:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:26:54 - info: Connection has been established successfully.
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:26:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:26:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:27:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:27:46 - info: Connection has been established successfully.
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:27:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:27:54 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:27:54 - info: Connection has been established successfully.
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:27:54 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:27:54 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:28:04 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 14:28:04 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 14:28:24 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:28:24 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:28:25 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:28:25 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:29:02 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:29:42 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:30:11 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:30:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:30:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:30:58 - info: Connection has been established successfully.
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:30:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:30:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:31:51 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:32:00 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:32:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:32:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:32:17 - info: Connection has been established successfully.
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:32:17 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:17 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:32:17 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:32:25 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:32:25 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:32:25 - info: Connection has been established successfully.
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:32:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:32:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:33:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:33:23 - info: Connection has been established successfully.
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:33:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:33:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:33:27 - info: Connection has been established successfully.
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:33:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:28 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:33:28 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:33:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:33:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:33:50 - info: Connection has been established successfully.
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:33:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:33:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:33:55 - info: Connection has been established successfully.
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:33:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:33:57 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:33:57 - info: Connection has been established successfully.
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:57 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:33:57 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:33:58 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:33:58 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:34:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:34:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:34:01 - info: Connection has been established successfully.
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:34:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:34:01 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:34:01 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:35:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:35:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:35:44 - info: Connection has been established successfully.
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:35:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:35:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:36:07 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:36:07 - info: Connection has been established successfully.
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:36:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:36:13 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:36:13 - info: Connection has been established successfully.
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:36:13 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:36:13 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:37:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:37:10 - info: Connection has been established successfully.
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:37:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:37:26 - info: Connection has been established successfully.
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:37:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:37:44 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:37:44 - info: Connection has been established successfully.
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:44 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:37:44 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:37:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:37:47 - info: Connection has been established successfully.
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:37:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:37:49 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:37:51 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:38:45 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:38:45 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:38:45 - info: Connection has been established successfully.
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:45 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:38:45 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:38:52 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:38:55 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:38:55 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:39:06 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa87"}
2018-01-26 14:39:06 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa87';
2018-01-26 14:39:10 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:39:10 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:39:10 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:39:16 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 14:39:16 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:39:27 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:39:27 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:39:27 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:39:28 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:39:28 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:39:28 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:40:00 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:40:00 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:40:00 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:41:08 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:41:08 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:41:08 - info: Connection has been established successfully.
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:41:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:14 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:41:14 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:41:14 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:41:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:41:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:41:46 - info: Connection has been established successfully.
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:41:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:41:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:41:51 - info: Connection has been established successfully.
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:41:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:41:52 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:41:52 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:41:52 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:41:54 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:41:54 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:41:54 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:02 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:02 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:02 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:02 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:02 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:02 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:04 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:04 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:04 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:05 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:05 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:05 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:05 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:05 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:05 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:06 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:06 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:06 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:09 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:09 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:09 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:29 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:29 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:29 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:32 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:32 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:32 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:42:56 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:42:56 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:42:56 - info: Connection has been established successfully.
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:42:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:42:56 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"c30e52a0-639c-4e41-9b60-d10e8bd4f5fd"}
2018-01-26 14:42:56 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = 'c30e52a0-639c-4e41-9b60-d10e8bd4f5fd';
2018-01-26 14:42:56 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:43:03 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:43:03 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:43:03 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:43:04 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 14:43:04 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 14:43:04 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:43:08 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa87"}
2018-01-26 14:43:08 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa87';
2018-01-26 14:43:35 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 14:43:35 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 14:43:35 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 14:44:17 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:44:17 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:44:17 - info: Connection has been established successfully.
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:44:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:44:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:46:18 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:46:18 - info: Connection has been established successfully.
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:46:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:46:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 14:48:31 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 14:48:31 - info: Connection has been established successfully.
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 14:48:31 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 14:48:31 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:00:37 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:00:37 - info: Connection has been established successfully.
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:00:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:00:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:00:40 - info: Connection has been established successfully.
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:00:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:00:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:07 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 15:01:07 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:01:07 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:01:08 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 15:01:08 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:01:08 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:01:15 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:15 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:15 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:15 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:15 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:15 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:16 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:17 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:17 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:17 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:01:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:01:35 - info: Connection has been established successfully.
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:01:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:01:42 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:01:42 - info: Connection has been established successfully.
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:01:42 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:01:42 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:42 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:42 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:44 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:44 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:44 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:44 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:01:44 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:01:44 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:25 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:25 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:25 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:35 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:35 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:37 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:02:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:02:50 - info: Connection has been established successfully.
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:02:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:02:51 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:51 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:51 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:52 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:52 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:52 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:52 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:52 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:52 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:02:54 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:02:54 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:07 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:03:07 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:03:07 - info: Connection has been established successfully.
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:03:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:07 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:03:07 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:07 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:16 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:03:16 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:19 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:40 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"0402028d-04f6-4bab-a0f7-20b626dffa88"}
2018-01-26 15:03:40 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:03:41 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '0402028d-04f6-4bab-a0f7-20b626dffa88';
2018-01-26 15:03:48 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:03:48 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:48 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:49 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 15:03:49 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:49 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 15:03:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 15:03:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 15:03:52 - info: Connection has been established successfully.
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 15:03:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 15:03:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 16:01:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 16:01:01 - info: Connection has been established successfully.
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 16:01:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:06 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 16:01:06 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:06 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:09 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 16:01:09 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:09 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:11 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 16:01:11 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:11 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:12 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 16:01:12 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:12 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:15 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 16:01:15 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:15 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 16:01:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 16:01:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 16:01:21 - info: Connection has been established successfully.
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:01:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 16:01:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 16:58:59 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 16:58:59 - info: Connection has been established successfully.
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 16:58:59 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 16:58:59 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:08:34 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:08:34 - info: Connection has been established successfully.
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:08:34 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:08:34 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:10:30 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:10:30 - info: Connection has been established successfully.
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:10:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:10:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:10:48 - info: Connection has been established successfully.
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:10:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:10:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:11:04 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:11:04 - info: Connection has been established successfully.
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:04 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:11:04 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:14 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:11:14 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:11:21 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:11:21 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:11:56 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:11:56 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:11:56 - info: Connection has been established successfully.
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:56 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:11:56 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:11:58 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:11:58 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:12:23 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:12:41 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:12:53 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:12:53 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:12:53 - info: Connection has been established successfully.
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:53 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:12:53 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:12:54 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:12:54 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:12:56 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:12:58 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:13:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:13:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:13:06 - info: Connection has been established successfully.
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:13:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:06 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:13:06 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:13:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:13:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:13:12 - info: Connection has been established successfully.
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:13:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:13:13 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:13:13 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:13:40 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:13:40 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:14:22 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:14:22 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:14:22 - info: Connection has been established successfully.
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:14:22 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:14:22 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:14:22 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:14:43 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:14:43 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:15:30 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:15:30 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:15:30 - info: Connection has been established successfully.
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:30 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:15:30 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:15:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:15:39 - info: Connection has been established successfully.
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:15:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:15:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:16:14 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:16:14 - info: Connection has been established successfully.
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:16:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:16:26 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 17:16:26 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 17:16:26 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 17:16:26 - info: Executing (default): INSERT INTO "customer" ("customerid","checkintime","name","phone","furnish") VALUES ('70860d9e-8eb1-4884-9e73-91ff55ee7211','2018-01-26 09:16:26.905 +00:00','abnerlin','0911491788','08e9fc0d-e966-442a-9992-3c288aa55c8a') RETURNING *;
2018-01-26 17:16:36 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:16:36 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:16:43 - info: POST /api/customer/ From: ::1
params: {"name":"abnerlin","phone":"0911491788","count":"1","furnishId":"08e9fc0d-e966-442a-9992-3c288aa55c8a"}
2018-01-26 17:16:43 - info: Executing (default): SELECT "furnishid", "name", "x", "y", "furnishclass", "mapid" FROM "furnish" AS "furnish" WHERE "furnish"."furnishid" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 17:16:43 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."furnish" = '08e9fc0d-e966-442a-9992-3c288aa55c8a';
2018-01-26 17:16:46 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:16:46 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:17:07 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:17:07 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:17:07 - info: Connection has been established successfully.
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:17:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:17:15 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:17:15 - info: Connection has been established successfully.
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:17:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:17:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:17:39 - info: Connection has been established successfully.
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:17:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:17:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:18:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:18:01 - info: Connection has been established successfully.
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:18:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:18:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:21:50 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:21:50 - info: Connection has been established successfully.
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:21:50 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:21:50 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:25:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:25:21 - info: Connection has been established successfully.
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:25:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:25:41 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:25:41 - info: Connection has been established successfully.
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:25:41 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:25:41 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:26:07 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:26:07 - info: Connection has been established successfully.
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:07 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:26:07 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:26:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:26:10 - info: Connection has been established successfully.
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:26:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:26:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:27:23 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:27:23 - info: Connection has been established successfully.
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:23 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:27:23 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:27:32 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:27:32 - info: Connection has been established successfully.
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:27:32 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:27:32 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:28:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:28:47 - info: Connection has been established successfully.
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:28:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:28:50 - info: PUT /api/customer/ From: ::1
params: {}
2018-01-26 17:30:19 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:30:19 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:30:19 - info: Connection has been established successfully.
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:30:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:30:20 - info: PUT /api/customer/ From: ::1
params: {"id":"70860d9e-8eb1-4884-9e73-91ff55ee7211"}
2018-01-26 17:30:20 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."customerid" = '70860d9e-8eb1-4884-9e73-91ff55ee7211';
2018-01-26 17:30:20 - info: Executing (default): UPDATE "customer" SET "checkouttime"='2018-01-26 09:30:20.632 +00:00' WHERE "customerid" = '70860d9e-8eb1-4884-9e73-91ff55ee7211'
2018-01-26 17:30:29 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:30:29 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:30:39 - info: PUT /api/customer/ From: ::1
params: {"id":"be88b22b-7ae7-410a-87b1-e2ad76e27793"}
2018-01-26 17:30:39 - info: Executing (default): SELECT "customerid", "checkintime", "checkouttime", "name", "peoplecount", "phone", "remark", "furnish" FROM "customer" AS "customer" WHERE "customer"."customerid" = 'be88b22b-7ae7-410a-87b1-e2ad76e27793';
2018-01-26 17:30:39 - info: Executing (default): UPDATE "customer" SET "checkouttime"='2018-01-26 09:30:39.497 +00:00' WHERE "customerid" = 'be88b22b-7ae7-410a-87b1-e2ad76e27793'
2018-01-26 17:30:41 - info: GET /api/customer/ From: ::1
params: {}
2018-01-26 17:30:41 - info: Executing (default): SELECT "customer"."customerid", "customer"."checkintime", "customer"."checkouttime", "customer"."name", "customer"."peoplecount", "customer"."phone", "customer"."remark", "customer"."furnish", "furnishObj"."furnishid" AS "furnishObj.furnishid", "furnishObj"."name" AS "furnishObj.name", "furnishObj"."x" AS "furnishObj.x", "furnishObj"."y" AS "furnishObj.y", "furnishObj"."furnishclass" AS "furnishObj.furnishclass", "furnishObj"."mapid" AS "furnishObj.mapid", "bookingList"."bookingid" AS "bookingList.bookingid", "bookingList"."ordertime" AS "bookingList.ordertime", "bookingList"."deliverytime" AS "bookingList.deliverytime", "bookingList"."volume" AS "bookingList.volume", "bookingList"."issend" AS "bookingList.issend", "bookingList"."customerid" AS "bookingList.customerid", "bookingList"."itemid" AS "bookingList.itemid" FROM "customer" AS "customer" LEFT OUTER JOIN "furnish" AS "furnishObj" ON "customer"."furnish" = "furnishObj"."furnishid" LEFT OUTER JOIN "booking" AS "bookingList" ON "customer"."customerid" = "bookingList"."customerid" WHERE "customer"."checkouttime" IS NULL;
2018-01-26 17:31:18 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:31:18 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:31:18 - info: Connection has been established successfully.
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:31:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:31:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:35:20 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:35:20 - info: Connection has been established successfully.
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:20 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:35:20 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:35:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:35:39 - info: Connection has been established successfully.
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:35:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:35:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:35:48 - info: Connection has been established successfully.
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:35:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:35:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:36:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:36:12 - info: Connection has been established successfully.
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:36:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:36:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:36:27 - info: Connection has been established successfully.
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:36:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:36:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:36:49 - info: Connection has been established successfully.
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:36:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:36:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:36:55 - info: Connection has been established successfully.
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:36:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:36:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:37:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:37:10 - info: Connection has been established successfully.
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:37:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:37:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:37:36 - info: Connection has been established successfully.
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:37:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:37:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:40:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:40:46 - info: Connection has been established successfully.
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:40:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:40:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:40:49 - info: Connection has been established successfully.
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:40:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:40:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:41:14 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:41:14 - info: Connection has been established successfully.
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:41:14 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:14 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:41:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:41:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:15 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:41:15 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:41:39 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:41:39 - info: Connection has been established successfully.
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:41:39 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:41:39 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:03 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:18 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:42:18 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:42:18 - info: Connection has been established successfully.
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:42:18 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:18 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:18 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:23 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:23 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:23 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:23 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:24 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:42:24 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:42:26 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:42:26 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:42:26 - info: Connection has been established successfully.
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:42:26 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:42:26 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:44:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:44:10 - info: Connection has been established successfully.
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:44:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:44:52 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:44:52 - info: Connection has been established successfully.
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:44:52 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:44:52 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:45:09 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:45:09 - info: Connection has been established successfully.
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:45:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:45:36 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:45:36 - info: Connection has been established successfully.
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:45:36 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:45:36 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:46:06 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:46:06 - info: Connection has been established successfully.
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:06 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:46:06 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:46:21 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:46:21 - info: Connection has been established successfully.
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:21 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:46:21 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:46:23 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:46:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:46:24 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:46:24 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:46:24 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:46:24 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:46:37 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:47:51 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:47:51 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:47:51 - info: Connection has been established successfully.
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:51 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:47:51 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:47:58 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:47:58 - info: Connection has been established successfully.
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:47:58 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:47:58 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:05 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:48:05 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:48:10 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:19 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:48:19 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:48:19 - info: Connection has been established successfully.
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:19 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:48:19 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:48:27 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:48:27 - info: Connection has been established successfully.
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:27 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:48:27 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:28 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:31 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:32 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:43 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:48:43 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:48:43 - info: Connection has been established successfully.
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:43 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:48:43 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:48:44 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:50 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:51 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:51 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:52 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:48:52 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:49:32 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:49:42 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:08 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:50:08 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:50:08 - info: Connection has been established successfully.
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:08 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:50:08 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:50:09 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:09 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:50:18 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:18 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:50:19 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:19 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:50:19 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:19 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:50:21 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:50:21 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:50:23 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:50:23 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:52:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:52:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:52:16 - info: Connection has been established successfully.
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:52:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:19 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:52:24 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:52:24 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:52:24 - info: Connection has been established successfully.
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:25 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:52:25 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:52:48 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:52:48 - info: Connection has been established successfully.
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:52:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:52:52 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:52:52 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:53:00 - info: GET /api/map/ From: ::1
params: {}
2018-01-26 17:53:00 - info: Executing (default): SELECT "mapid", "name", "width", "height" FROM "seatmap" AS "seatmap";
2018-01-26 17:53:02 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-26 17:53:02 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-26 17:53:09 - info: Executing (default): SELECT 1+1 AS result
2018-01-26 17:53:09 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-26 17:53:09 - info: Connection has been established successfully.
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-26 17:53:09 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-26 17:53:09 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:10:55 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:10:55 - info: Connection has been established successfully.
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:10:55 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:10:55 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:17:17 - info: GET /api/map/4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3 From: ::1
params: {}
2018-01-29 10:17:17 - info: Executing (default): SELECT "seatmap"."mapid", "seatmap"."name", "seatmap"."width", "seatmap"."height", "furnishList"."furnishid" AS "furnishList.furnishid", "furnishList"."name" AS "furnishList.name", "furnishList"."x" AS "furnishList.x", "furnishList"."y" AS "furnishList.y", "furnishList"."furnishclass" AS "furnishList.furnishclass", "furnishList"."mapid" AS "furnishList.mapid" FROM "seatmap" AS "seatmap" LEFT OUTER JOIN "furnish" AS "furnishList" ON "seatmap"."mapid" = "furnishList"."mapid" WHERE "seatmap"."mapid" = '4cd7c00c-cf6e-4cdc-afbb-c3b1c8b013b3';
2018-01-29 10:18:38 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:18:38 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:18:38 - info: Connection has been established successfully.
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:38 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:18:38 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:18:47 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:18:47 - info: Connection has been established successfully.
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:18:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:18:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:18:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:18:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:18:47 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:47 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:18:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:18:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:18:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:48 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:18:48 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:18:49 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:18:49 - info: Connection has been established successfully.
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:18:49 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:18:49 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:19:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:19:12 - info: Connection has been established successfully.
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:19:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:19:29 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:19:29 - info: Connection has been established successfully.
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:29 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:19:29 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:19:35 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:19:35 - info: Connection has been established successfully.
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:35 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:19:35 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:19:37 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:19:37 - info: Connection has been established successfully.
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:37 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:19:37 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:19:40 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:19:40 - info: Connection has been established successfully.
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:19:40 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:19:40 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:20:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:20:01 - info: Connection has been established successfully.
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:20:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:20:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 10:27:16 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 10:27:16 - info: Connection has been established successfully.
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 10:27:16 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 10:27:16 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:05:01 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:05:01 - info: Connection has been established successfully.
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:05:01 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:05:01 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:07:24 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:07:24 - info: Connection has been established successfully.
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:07:24 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:07:24 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:08:00 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:08:00 - info: Connection has been established successfully.
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:08:00 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:08:00 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:11:10 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:11:10 - info: Connection has been established successfully.
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:11:10 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:11:10 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:13:46 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:13:46 - info: Connection has been established successfully.
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:13:46 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:13:46 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:14:12 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:14:12 - info: Connection has been established successfully.
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:14:12 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:14:12 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): SELECT 1+1 AS result
2018-01-29 11:15:02 - info: Executing (default): SELECT t.typname enum_name, array_agg(e.enumlabel ORDER BY enumsortorder) enum_value FROM pg_type t JOIN pg_enum e ON t.oid = e.enumtypid JOIN pg_catalog.pg_namespace n ON n.oid = t.typnamespace WHERE n.nspname = 'public' AND t.typname='enum_furnishclass_name' GROUP BY 1
2018-01-29 11:15:02 - info: Connection has been established successfully.
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnishclass" ("classid" VARCHAR(255) , "name" "public"."enum_furnishclass_name" NOT NULL UNIQUE, "imagepath" VARCHAR(255), "visible" VARCHAR(1) NOT NULL DEFAULT 'T', "nameable" VARCHAR(1) NOT NULL DEFAULT 'T', UNIQUE ("name"), PRIMARY KEY ("classid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnishclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "seatmap" ("mapid" VARCHAR(255) , "name" VARCHAR(255), "width" INTEGER NOT NULL, "height" INTEGER NOT NULL, PRIMARY KEY ("mapid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'seatmap' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "furnish" ("furnishid" VARCHAR(255) , "name" VARCHAR(255) UNIQUE, "x" INTEGER NOT NULL, "y" INTEGER NOT NULL, "furnishclass" VARCHAR(255) NOT NULL REFERENCES "furnishclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, "mapid" VARCHAR(255) NOT NULL REFERENCES "seatmap" ("mapid") ON DELETE NO ACTION ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("furnishid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'furnish' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "customer" ("customerid" VARCHAR(255) , "checkintime" TIMESTAMP WITH TIME ZONE NOT NULL, "checkouttime" TIMESTAMP WITH TIME ZONE, "name" VARCHAR(255), "peoplecount" INTEGER, "phone" VARCHAR(255), "remark" VARCHAR(255), "furnish" VARCHAR(255) NOT NULL REFERENCES "furnish" ("furnishid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("customerid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'customer' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "itemclass" ("classid" VARCHAR(255) , "classname" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "description" VARCHAR(255), "mealtype" VARCHAR(255) NOT NULL UNIQUE, UNIQUE ("classname"), UNIQUE ("mealtype"), PRIMARY KEY ("classid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'itemclass' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "item" ("itemid" VARCHAR(255) , "name" VARCHAR(255) NOT NULL UNIQUE, "imagepath" VARCHAR(255), "price" INTEGER NOT NULL, "description" VARCHAR(255), "isdisplay" INTEGER DEFAULT 1, "classid" VARCHAR(255) NOT NULL REFERENCES "itemclass" ("classid") ON DELETE CASCADE ON UPDATE CASCADE, UNIQUE ("name"), PRIMARY KEY ("itemid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'item' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "booking" ("bookingid" VARCHAR(255) , "ordertime" TIMESTAMP WITH TIME ZONE NOT NULL, "deliverytime" TIMESTAMP WITH TIME ZONE, "volume" INTEGER NOT NULL, "issend" INTEGER NOT NULL DEFAULT 0, "customerid" VARCHAR(255) NOT NULL REFERENCES "customer" ("customerid") ON DELETE NO ACTION ON UPDATE CASCADE, "itemid" VARCHAR(255) NOT NULL REFERENCES "item" ("itemid") ON DELETE NO ACTION ON UPDATE CASCADE, PRIMARY KEY ("bookingid"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'booking' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userinfo" ("username" VARCHAR(255) , "password" VARCHAR(255) NOT NULL, PRIMARY KEY ("username"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userinfo' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
2018-01-29 11:15:02 - info: Executing (default): CREATE TABLE IF NOT EXISTS "userrole" ("username" VARCHAR(255)  REFERENCES "userinfo" ("username") ON DELETE CASCADE ON UPDATE CASCADE, "role" VARCHAR(255) , PRIMARY KEY ("username","role"));
2018-01-29 11:15:02 - info: Executing (default): SELECT i.relname AS name, ix.indisprimary AS primary, ix.indisunique AS unique, ix.indkey AS indkey, array_agg(a.attnum) as column_indexes, array_agg(a.attname) AS column_names, pg_get_indexdef(ix.indexrelid) AS definition FROM pg_class t, pg_class i, pg_index ix, pg_attribute a WHERE t.oid = ix.indrelid AND i.oid = ix.indexrelid AND a.attrelid = t.oid AND t.relkind = 'r' and t.relname = 'userrole' GROUP BY i.relname, ix.indexrelid, ix.indisprimary, ix.indisunique, ix.indkey ORDER BY i.relname;
